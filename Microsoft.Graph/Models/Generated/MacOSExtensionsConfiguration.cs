// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Mac OSExtensions Configuration.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class MacOSExtensionsConfiguration : DeviceConfiguration
    {
    
        /// <summary>
        /// Gets or sets kernel extension overrides allowed.
        /// If set to true, users can approve additional kernel extensions not explicitly allowed by configurations profiles.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "kernelExtensionOverridesAllowed", Required = Newtonsoft.Json.Required.Default)]
        public bool? KernelExtensionOverridesAllowed { get; set; }
    
        /// <summary>
        /// Gets or sets kernel extension allowed team identifiers.
        /// All kernel extensions validly signed by the team identifiers in this list will be allowed to load.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "kernelExtensionAllowedTeamIdentifiers", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> KernelExtensionAllowedTeamIdentifiers { get; set; }
    
        /// <summary>
        /// Gets or sets kernel extensions allowed.
        /// A list of kernel extensions that will be allowed to load. . This collection can contain a maximum of 500 elements.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "kernelExtensionsAllowed", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<MacOSKernelExtension> KernelExtensionsAllowed { get; set; }
    
    }
}

